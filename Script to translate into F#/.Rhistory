comparison <- compare(base,datos)
comparison$tM
setwd("~/Freelance/1. Nov 16 - PTF Edo de México")
#Consulta de datos: http://www.beta.inegi.org.mx/app/saic/
###Código optimizado para el Estado de México en 2014
#####Lectura y limpieza de datos#####
base <- read.csv("Consulta inicial INEGI.csv",
stringsAsFactors=FALSE)
###Renombrar variables
#names(base)
names(base)[names(base) %in% "Actividad.Económica"] <- "Act.Econ"
names(base)[names(base) %in% "A131A.Valor.agregado.censal.bruto..millones.de.pesos."] <- "VA.millones"
names(base)[names(base) %in% "H001D.Horas.trabajadas.por.Personal.ocupado.total..miles.de.Horas."] <- "HT.miles"
names(base)[names(base) %in% "Q000A.Acervo.total.de.activos.fijos..millones.de.pesos."] <- "AF.millones"
###Crear variable con código INEGI
base$Clave.INEGI <- as.character(paste0("15",substr(base$Municipio,1,3)))
base$Municipio <- substr(base$Municipio,5,100)
###Reescalar variables
base$VA <- base$VA.millones*1000000
base$HT <- base$HT.miles*1000
base$AF <- base$AF.millones*1000000
###Ordenar base final
#names(base)
base <- base[c("Año.Censal","Municipio","Clave.INEGI","Act.Econ","VA","HT","AF")]
###Escribir .csv con la base a usar en la regresión
#write.csv(base, "Edo. de Mex - Base para regresión PTF.csv", row.names=FALSE)
#####Estimación de la Productividad Total de los Factores#####
##Se puede utilizar la misma base o leer el .csv preparado anteriormente
#datos <- read.csv("Edo. de Mex - Base para regresión PTF.csv",
#                  stringsAsFactors=FALSE)
setwd("~/Freelance/1. Nov 16 - PTF Edo de México")
#Consulta de datos: http://www.beta.inegi.org.mx/app/saic/
###Código optimizado para el Estado de México en 2014
#####Lectura y limpieza de datos#####
base <- read.csv("Consulta inicial INEGI.csv",
stringsAsFactors=FALSE)
###Renombrar variables
#names(base)
names(base)[names(base) %in% "Actividad.Económica"] <- "Act.Econ"
names(base)[names(base) %in% "A131A.Valor.agregado.censal.bruto..millones.de.pesos."] <- "VA.millones"
names(base)[names(base) %in% "H001D.Horas.trabajadas.por.Personal.ocupado.total..miles.de.Horas."] <- "HT.miles"
names(base)[names(base) %in% "Q000A.Acervo.total.de.activos.fijos..millones.de.pesos."] <- "AF.millones"
###Crear variable con código INEGI
base$Clave.INEGI <- as.character(paste0("15",substr(base$Municipio,1,3)))
base$Municipio <- substr(base$Municipio,5,100)
###Reescalar variables
base$VA <- base$VA.millones*1000000
base$HT <- base$HT.miles*1000
base$AF <- base$AF.millones*1000000
###Ordenar base final
#names(base)
base <- base[c("Año.Censal","Municipio","Clave.INEGI","Act.Econ","VA","HT","AF")]
###Escribir .csv con la base a usar en la regresión
#write.csv(base, "Edo. de Mex - Base para regresión PTF.csv", row.names=FALSE)
#####Estimación de la Productividad Total de los Factores#####
##Se puede utilizar la misma base o leer el .csv preparado anteriormente
#datos <- read.csv("Edo. de Mex - Base para regresión PTF.csv",
#                  stringsAsFactors=FALSE)
base[VA==0, ]
base[base$VA==0, ]
base$VA==0
base <- base[base$VA>0, ]
setwd("~/Freelance/1. Nov 16 - PTF Edo de México")
#Consulta de datos: http://www.beta.inegi.org.mx/app/saic/
###Código optimizado para el Estado de México en 2014
#####Lectura y limpieza de datos#####
base <- read.csv("Consulta inicial INEGI.csv",
stringsAsFactors=FALSE)
###Renombrar variables
#names(base)
names(base)[names(base) %in% "Actividad.Económica"] <- "Act.Econ"
names(base)[names(base) %in% "A131A.Valor.agregado.censal.bruto..millones.de.pesos."] <- "VA.millones"
names(base)[names(base) %in% "H001D.Horas.trabajadas.por.Personal.ocupado.total..miles.de.Horas."] <- "HT.miles"
names(base)[names(base) %in% "Q000A.Acervo.total.de.activos.fijos..millones.de.pesos."] <- "AF.millones"
###Crear variable con código INEGI
base$Clave.INEGI <- as.character(paste0("15",substr(base$Municipio,1,3)))
base$Municipio <- substr(base$Municipio,5,100)
###Reescalar variables
base$VA <- base$VA.millones*1000000
base$HT <- base$HT.miles*1000
base$AF <- base$AF.millones*1000000
###Ordenar base final
#names(base)
base <- base[c("Año.Censal","Municipio","Clave.INEGI","Act.Econ","VA","HT","AF")]
###Escribir .csv con la base a usar en la regresión
#write.csv(base, "Edo. de Mex - Base para regresión PTF.csv", row.names=FALSE)
#####Estimación de la Productividad Total de los Factores#####
##Se puede utilizar la misma base o leer el .csv preparado anteriormente
#datos <- read.csv("Edo. de Mex - Base para regresión PTF.csv",
#                  stringsAsFactors=FALSE)
datos <- base
datos <- datos[datos$VA>0, ]
View(base)
datos <- datos[datos$HT>0, ]
datos <- datos[datos$AF>0, ]
datos$YeL <- datos$VA/datos$HT
datos$KeY <- datos$AF/datos$VA
View(datos)
log(10)
log(exp(1))
log(2.71)
log(2.72)
exp(1)
log(2.718)
log(2.7182)
log(2.718282)
log(2.71828)
datos$ln_YeL <- log(datos$YeL)
datos$ln_KeY <- log(datos$KeY)
View(datos)
reg <- lm(ln_YeL ~ ln_KeY, data=datos)
constante <- reg$coefficients[1]
beta <- -(reg$coefficients[2])
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
constante <- reg$coefficients[1]
beta <- (reg$coefficients[2])
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
exp(5.27)
summary(reg)
i <- 15001
aux <- subset(datos, Clave.INEGI==i)
View(aux)
datos[12,]
[11,]
datos[11,]
View(base)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
summary(reg)
constante <- reg$coefficients[1]
beta <- reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
constante <- reg$coefficients[1]
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- as.data.frame(cbind(Municipio,PTF))
View(Resultados)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$PTF[(i-15000)] <- ln_a
}
warnings()
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- as.data.frame(cbind(Municipio,PTF))
Resultados <- as.data.frame(cbind(Municipio,PTF), stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$PTF[(i-15000)] <- ln_a
}
Resultados <- data.frame(cbind(Municipio,PTF))
?as.data.frame
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF)
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF)
unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF)
i<-15001
aux <- subset(datos, Clave.INEGI==i)
View(aux)
i<-15124
aux <- subset(datos, Clave.INEGI==i)
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
prueba <- Resultados
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
test <- merge(prueba,Resultados)
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
View(prueba)
merge(prueba,Resultados)
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A2=PTF)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
test <- merge(prueba,Resultados)
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A2=PTF)
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
prueba <- Resultados
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A2=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
test <- merge(prueba,Resultados)
prueba
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A2=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
setwd("~/Freelance/1. Nov 16 - PTF Edo de México")
#Consulta de datos: http://www.beta.inegi.org.mx/app/saic/
###Código optimizado para el Estado de México en 2014
#####Lectura y limpieza de datos#####
base <- read.csv("Consulta inicial INEGI.csv",
stringsAsFactors=FALSE)
###Renombrar variables
#names(base)
names(base)[names(base) %in% "Actividad.Económica"] <- "Act.Econ"
names(base)[names(base) %in% "A131A.Valor.agregado.censal.bruto..millones.de.pesos."] <- "VA.millones"
names(base)[names(base) %in% "H001D.Horas.trabajadas.por.Personal.ocupado.total..miles.de.Horas."] <- "HT.miles"
names(base)[names(base) %in% "Q000A.Acervo.total.de.activos.fijos..millones.de.pesos."] <- "AF.millones"
###Crear variable con código INEGI
base$Clave.INEGI <- as.character(paste0("15",substr(base$Municipio,1,3)))
base$Municipio <- substr(base$Municipio,5,100)
###Reescalar variables
base$VA <- base$VA.millones*1000000
base$HT <- base$HT.miles*1000
base$AF <- base$AF.millones*1000000
###Ordenar base final
#names(base)
base <- base[c("Año.Censal","Municipio","Clave.INEGI","Act.Econ","VA","HT","AF")]
###Escribir .csv con la base a usar en la regresión
#write.csv(base, "Edo. de Mex - Base para regresión PTF.csv", row.names=FALSE)
#####Estimación de la Productividad Total de los Factores#####
##Se puede utilizar la misma base o leer el .csv preparado anteriormente
#datos <- read.csv("Edo. de Mex - Base para regresión PTF.csv",
#                  stringsAsFactors=FALSE)
datos <- base
##Limpiar inconsistencias
datos <- datos[datos$VA>0, ]
datos <- datos[datos$HT>0, ]
datos <- datos[datos$AF>0, ]
##Crear relaciones Y/L y K/Y
datos$YeL <- datos$VA/datos$HT
datos$KeY <- datos$AF/datos$VA
##Calcular logaritmos: ln(Y/L) y ln(K/Y)
datos$ln_YeL <- log(datos$YeL)
datos$ln_KeY <- log(datos$KeY)
###Correr regresión para cada municipio
##Preparar lista de resultados
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
prueba <- Resultados
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A2=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A2[(i-15000)] <- ln_a
}
test <- merge(prueba,Resultados)
View(test)
test$rank1 <- sort(test$ln_A)
test$rank1 <- order(test$ln_A)
test$rank2 <- order(test$ln_2)
test$rank2 <- order(test$ln_A2)
cor(test$rank1,test$rank2)
test$rank1 <- order(-test$ln_A)
test$rank2 <- order(-test$ln_A2)
?order
test$rank1 <- order(test$ln_A,decreasing=TRUE)
test$rank2 <- order(test$ln_A2,decreasing=TRUE)
test <- merge(prueba,Resultados)
order(test$ln_A,decreasing=TRUE)
test$rank1 <- order(test$ln_A,decreasing=TRUE)
test$rank2 <- order(test$ln_A2,decreasing=TRUE)
test$rank1 <- rank(test$ln_A,decreasing=TRUE)
test$rank2 <- rank(test$ln_A2,decreasing=TRUE)
test$rank1 <- rank(test$ln_A)
test$rank2 <- rank(test$ln_A2)
?rank
test$rank1 <- rank(-test$ln_A)
test$rank2 <- rank(-test$ln_A2)
cor(test$rank1,test$rank2)
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A2=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -reg$coefficients[2]
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A2[(i-15000)] <- ln_a
}
setwd("~/Freelance/1. Nov 16 - PTF Edo de México")
#Consulta de datos: http://www.beta.inegi.org.mx/app/saic/
###Código optimizado para el Estado de México en 2014
#####Lectura y limpieza de datos#####
base <- read.csv("Consulta inicial INEGI.csv",
stringsAsFactors=FALSE)
###Renombrar variables
#names(base)
names(base)[names(base) %in% "Actividad.Económica"] <- "Act.Econ"
names(base)[names(base) %in% "A131A.Valor.agregado.censal.bruto..millones.de.pesos."] <- "VA.millones"
names(base)[names(base) %in% "H001D.Horas.trabajadas.por.Personal.ocupado.total..miles.de.Horas."] <- "HT.miles"
names(base)[names(base) %in% "Q000A.Acervo.total.de.activos.fijos..millones.de.pesos."] <- "AF.millones"
###Crear variable con código INEGI
base$Clave.INEGI <- as.character(paste0("15",substr(base$Municipio,1,3)))
base$Municipio <- substr(base$Municipio,5,100)
###Reescalar variables
base$VA <- base$VA.millones*1000000
base$HT <- base$HT.miles*1000
base$AF <- base$AF.millones*1000000
###Ordenar base final
#names(base)
base <- base[c("Año.Censal","Municipio","Clave.INEGI","Act.Econ","VA","HT","AF")]
###Escribir .csv con la base a usar en la regresión
#write.csv(base, "Edo. de Mex - Base para regresión PTF.csv", row.names=FALSE)
#####Estimación de la Productividad Total de los Factores#####
##Se puede utilizar la misma base o leer el .csv preparado anteriormente
#datos <- read.csv("Edo. de Mex - Base para regresión PTF.csv",
#                  stringsAsFactors=FALSE)
datos <- base
##Limpiar inconsistencias
datos <- datos[datos$VA>0, ]
datos <- datos[datos$HT>0, ]
datos <- datos[datos$AF>0, ]
##Crear relaciones Y/L y K/Y
datos$YeL <- datos$VA/datos$HT
datos$KeY <- datos$AF/datos$VA
##Calcular logaritmos: ln(Y/L) y ln(K/Y)
datos$ln_YeL <- log(datos$YeL)
datos$ln_KeY <- log(datos$KeY)
###Correr regresión para cada municipio
##Preparar lista de resultados
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A2=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -(reg$coefficients[2])
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A2[(i-15000)] <- ln_a
}
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -(reg$coefficients[2])
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A2[(i-15000)] <- ln_a
}
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -(reg$coefficients[2])
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
Resultados <- NULL
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -(reg$coefficients[2])
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
Resultados <- Resultados[order(Resultados$ln_A)]
Resultados$ln_A
Resultados <- Resultados[order(Resultados$ln_A), ]
Municipio <- unique(datos$Municipio)
PTF <- numeric(length(Municipio))
Resultados <- data.frame(Municipio=Municipio,ln_A=PTF,
stringsAsFactors=FALSE)
for(i in 15001:15125){
aux <- subset(datos, Clave.INEGI==i)
reg <- lm(ln_YeL ~ ln_KeY, data=aux)
constante <- reg$coefficients[1]
beta <- -(reg$coefficients[2])
alpha <- beta/(beta+1)
ln_a <- constante/(beta+1)
Resultados$ln_A[(i-15000)] <- ln_a
}
Resultados$Ranking <- rank(Resultados$ln_A)
Resultados$Ranking <- rank(-Resultados$ln_A)
Resultados$Score <- (Resultados$ln_A-min(Resultados$ln_A))/(max(Resultados$ln_A)-min(Resultados$ln_A))
Resultados$Score <- 100*(Resultados$ln_A-min(Resultados$ln_A))/(max(Resultados$ln_A)-min(Resultados$ln_A))
Resultados <- Resultados[order(Resultados$Ranking), ]
row.names(Resultados) <- NULL
hist(Resultados$Score)
write.csv(Resultados,"Ranking PTF - Edo. de México 2014.csv")
write.csv(Resultados,"Ranking PTF - Edo. de México 2014.csv", row.names=FALSE)
View(base)
Claves <- base[c("Clave.INEGI","Municipio")]
View(Claves)
Claves <- unique(base[c("Clave.INEGI","Municipio")])
Resultados <- merge(Claves,Resultados)
##Generar Ranking, Calificación y ordenar resultado final
Resultados$Ranking <- rank(-Resultados$ln_A)
Resultados$Score <- 100*(Resultados$ln_A-min(Resultados$ln_A))/(max(Resultados$ln_A)-min(Resultados$ln_A))
Resultados <- Resultados[order(Resultados$Ranking), ]
row.names(Resultados) <- NULL
##Guardar .csv de Resultados
write.csv(Resultados,"Ranking PTF - Edo. de México 2014.csv", row.names=FALSE)
